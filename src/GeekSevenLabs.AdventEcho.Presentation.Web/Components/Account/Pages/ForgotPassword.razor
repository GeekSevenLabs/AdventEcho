@page "/Account/ForgotPassword"
@layout AnonymousLayout

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<EchoPage Title="Esqueci minha senha!" HiddenBars MaxWidth="EchoMaxWidth.Small" >
    <Content>
        <section class="tw|flex tw|flex-col tw|gap-4">
            <MudStack Spacing="0">
                <MudText Color="Color.Primary" Typo="Typo.h4" Class="tw|font-thin">Oops, where's my key?</MudText>
                <MudText Color="Color.Primary" Typo="Typo.h5" Class="tw|font-bold">I need a new password!</MudText>
            </MudStack>

            <MudStack>
                <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                    <DataAnnotationsValidator/>

                    <MudStack Spacing="4">

                        <MudText>
                            Preencha o seu email para receber um link de redefinição de senha.
                        </MudText>

                        <MudStaticTextField
                            For="@(() => Input.Email)" @bind-Value="Input.Email"
                            Label="Email" Placeholder="name@example.com"
                            Variant="Variant.Outlined"
                            UserAttributes="@(new Dictionary<string, object?> { { "autocomplete", "username" }, { "aria-required", "true" } })"/>

                        <ValidationSummary />

                        <MudStaticButton
                            Variant="Variant.Filled"
                            Color="Color.Primary"
                            FormAction="FormAction.Submit">
                            Redefinir senha
                        </MudStaticButton>
                        
                    </MudStack>
                </EditForm>
            </MudStack>
        </section>
    </Content>
</EchoPage>

@code 
{
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !await UserManager.IsEmailConfirmedAsync(user))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required] [EmailAddress] public string Email { get; set; } = "";
    }
}