@page "/Account/ConfirmEmail"
@layout AnonymousLayout

@using System.Text
@using GeekSevenLabs.AdventEcho.Application.Shared
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ConfirmEmail> Logger

<EchoPage Title="Confirmação de conta" MaxWidth="EchoMaxWidth.Small" HiddenBars >
    <Content>
        <section class="tw|flex tw|flex-col tw|gap-4">
            <MudStack Spacing="0">
                <MudText Color="Color.Primary" Typo="Typo.h4" Class="tw|font-thin">\o/ Congratulations!</MudText>
                <MudText Color="Color.Primary" Typo="Typo.h5" Class="tw|font-bold">Your email has been confirmed.</MudText>
            </MudStack>

            <MudStack>
                <StatusMessage Item="_alert"/>
            </MudStack>
            
            <MudStack>
                @if (_alert?.Severity == Severity.Success)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/" StartIcon="@Icons.Material.Filled.Home">
                        Continuar
                    </MudButton>
                }
            </MudStack>
            
        </section>
    </Content>
</EchoPage>

@code {
    private AlertItem? _alert;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = null!;

    [SupplyParameterFromQuery] private string? UserId { get; set; }

    [SupplyParameterFromQuery] private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            _alert = new AlertItem(Severity.Error, $"Error finding user with ID {UserId}");
        }
        else
        {
            var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, code);

            _alert = result.Succeeded ? 
                new AlertItem(Severity.Success, "Muito obrigado por confirmar seu e-mail.") : 
                new AlertItem(Severity.Error, "Ops! Algo deu errado ao confirmar seu e-mail.");
            
            // when success, attach role "Person" to user
            if (result.Succeeded)
            {
                Logger.LogInformation("User confirmed email and added to role Member.");
                await UserManager.AddToRoleAsync(user, StringsRoles.Person);
            }
        }
    }

}