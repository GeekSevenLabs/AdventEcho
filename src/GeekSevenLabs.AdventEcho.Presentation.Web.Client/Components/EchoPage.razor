@using MudBlazor.Utilities
@inherits EchoComponentBase

<PageTitle>@Title | Advent Echo </PageTitle>

<EchoContainer Class="@CssClass" Style="@Style" AdditionalAttributes="AdditionalAttributes" MaxWidth="MaxWidth">

    @if (!HiddenBars)
    {
        <MudPaper>
            <MudToolBar>
                @if (BackHref.IsNotNullOrWhiteSpace())
                {
                    <MudIconButton Icon="@Icons.Material.Outlined.ArrowBack" Color="Color.Inherit" Href="@BackHref"/>
                }
                <MudText Color="Color.Inherit">&ensp; @Title</MudText>
                <MudSpacer/>
                @Action
            </MudToolBar>
        </MudPaper>
    }
    

    <MudPaper Class="tw|py-6 tw|px-6">
        @Content
    </MudPaper>

    @if (!HiddenBars)
    {
        <MudPaper>
            <MudToolBar>
                @if (BackHref.IsNotNullOrWhiteSpace())
                {
                    <MudIconButton Icon="@Icons.Material.Outlined.ArrowBack" Color="Color.Inherit" Href="@BackHref"/>
                }
                <MudSpacer/>
                @BottomAction
            </MudToolBar>
        </MudPaper>
    }
</EchoContainer>

@code
{
    private string CssClass => new CssBuilder("tw|py-6 tw|px-4")
        .AddClass(Class)
        .AddClass("tw|flex tw|flex-col tw|gap-6")
        .ToString();

    [Parameter, EditorRequired] public required string Title { get; set; }
    [Parameter] public EchoMaxWidth MaxWidth { get; set; } = EchoMaxWidth.ExtraLarge;
    [Parameter] public string BackHref { get; set; } = string.Empty;

    [Parameter, EditorRequired] public required RenderFragment Content { get; set; }
    [Parameter] public RenderFragment? Action { get; set; }
    [Parameter] public RenderFragment? BottomAction { get; set; }
    
    [Parameter] public bool HiddenBars { get; set; }
}